x = 0.14; // mirror x dimension
y = 0.14;
space = 0.002; // space between mirrors
num_x = 7; // number of mirrors in x direction
num_y = 11;
step_x = x+space;
step_y = y+space;
max_x = step_x*(num_x-1)/2;
max_y = step_y*(num_y-1)/2;

num_rays = 10000;

z_abs = 1.5;
theta_z = 0;


open_project("empty.stinput");
sunopt({ptsrc=0e+00, shape="p", x=0e+00, sigma=2.73, halfwidth=4.65, 
		y=0e+00, z=100, useldh=0e+00, lat=39.5, day=90, hour=10, userdata=[  ]});
addoptic("mirror");
opticopt("mirror",0,{dist="g",refracti=1.2, refl=1, refractr=1.1, apstop=3,
					surfnum=1, difford=4, trans=1, errslope=0e+00, errspec=0e+00,
					grating=[ 1.1, 1.2, 1.3, 1.4 ] });
addoptic("absorber");
opticopt("Absorber",0, {dist="g",refracti=1.2, refl=0e+00, refractr=1, apstop=3,
						surfnum=1, difford=4, trans=0e+00, errslope=1e-05,
						errspec=1e-05, grating=[ 1.1, 1.2, 1.3, 1.4 ]});
addstage("Mirror array",  {virtual=0e+00, multihit=1, ax=0e+00, tracethrough=0e+00,
						z=0e+00, ay=0e+00, x=0e+00, y=0e+00, az=10, zrot=0e+00});
addelement(num_x*num_y+2);
// cap
elementopt(0,{en=1, y=0e+00, zrot=0e+00, x=0e+00, 
			aper=[ "r", 0.201, 0.201, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00 ],
			z=z_abs+0.01, surf=[ "f", 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00 ],
			ay=0e+00, ax=0e+00, az=0e+00, interact="reflection", optic="absorber", comment="cap" });

// absorber
elementopt(1,{en=1, y=0e+00, zrot=0e+00, x=0e+00, 
			aper=[ "r", 0.2, 0.2, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00 ],
			z=z_abs, surf=[ "f", 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00 ],
			ay=0e+00, ax=0e+00, az=0e+00, interact="reflection", optic="absorber", comment="absorber" });

z_aim = define(x, y, theta_z){
	return sqrt(x^2 + y^2)*tand((atand(z_abs/sqrt(x^2 + y^2)) + 90 - theta_z)/2);
};


// mirrors
count = 0;
for (i=-max_y; i<=max_y; i=i+step_y){
	for (j=-max_x; j<=max_x; j=j+step_x){
		elementopt(count+2, { en=1, y=i, zrot=0e+00, x=j, 
			aper=[ "r", x, y, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00 ], 
			z=0e+00, surf=[ "f", 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00, 0e+00 ], 
			ay=0e+00, ax=0e+00, az=z_aim(i, j, theta_z), interact="reflection", optic="mirror"});
		count++;
	}
}
// TODO add function to calculate aimpoint
// see here: https://github.com/orestispanago/Tracking/blob/master/trace2csv.lk

save_raydata = define(fname){
	arr[0] = ['x','y','z','cosx','cosy','cosz','element','stage','raynum'];
	for (k=0; k<nintersect(); k++){
		arr[k+1] = raydata(k);
	}
	csvwrite(fname,arr);
};

mirror_intersects = define(){
	mirror_intersects = 0;
	for (i=2; i<=num_x*num_y+2; i++){
		mirror_intersects+=nintersect(0, i);
	}
	return mirror_intersects;
};

traceopt({rays=num_rays});
trace();
// save_raydata("raydata.csv");

intercept_factor = nintersect(0, 1) / mirror_intersects() * 100;
overall_efficiency = nintersect(0, 1) / num_rays * 100;

outln("Intercept factor: " + intercept_factor);
outln("Overall efficiency: " + overall_efficiency);


// outln(z_aim(0.09425, 0, 0));
